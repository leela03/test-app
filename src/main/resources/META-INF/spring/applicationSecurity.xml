<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan base-package="com.datapine" />

	<!-- security -->
	<security:http auto-config='true'>
		<security:intercept-url pattern="/login"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/items"
			access="ROLE_USER" />
		<security:intercept-url pattern="/item" access="ROLE_USER" />
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider
			ref="userAuthenticationProvider" />
	</security:authentication-manager>

	<security:global-method-security
		pre-post-annotations="enabled">
		<security:expression-handler ref="expressionHandler" />
	</security:global-method-security>

	<bean id="expressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<!-- To use hasPermission() in expressions, configure a PermissionEvaluator -->
		<property name="permissionEvaluator" ref="permissionEvaluator" />
		<property name="roleHierarchy" ref="roleHierarchy" />
	</bean>

	<!-- Declare a custom PermissionEvaluator We'll rely on the standard AclPermissionEvaluator 
		implementation -->
	<bean class="org.springframework.security.acls.AclPermissionEvaluator"
		id="permissionEvaluator">
		<constructor-arg ref="aclService" />
	</bean>

	<bean class="org.springframework.security.acls.jdbc.JdbcMutableAclService"
		id="aclService">
		<constructor-arg ref="dataSource" />
		<constructor-arg ref="lookupStrategy" />
		<constructor-arg ref="aclCache" />
		<property name="classIdentityQuery" value="SELECT @@IDENTITY" />
		<property name="sidIdentityQuery" value="SELECT @@IDENTITY" />
	</bean>

	<bean id="lookupStrategy"
		class="org.springframework.security.acls.jdbc.BasicLookupStrategy">
		<constructor-arg ref="dataSource" />
		<constructor-arg ref="aclCache" />
		<constructor-arg ref="aclAuthorizationStrategy" />
		<constructor-arg ref="auditLogger" />
	</bean>

	<bean id="jdbcTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="aclCache"
		class="org.springframework.security.acls.domain.EhCacheBasedAclCache">
		<constructor-arg>
			<bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
				<property name="cacheManager">
					<bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" />
				</property>
				<property name="cacheName" value="aclCache" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="aclAuthorizationStrategy"
		class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl">
		<constructor-arg>
			<bean
				class="org.springframework.security.core.authority.SimpleGrantedAuthority">
				<constructor-arg>
					<value>ROLE_ADMINISTRATOR</value>
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>

	<bean id="auditLogger"
		class="org.springframework.security.acls.domain.ConsoleAuditLogger" />

	<bean id="roleHierarchy"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<property name="hierarchy">
			<value>
				ROLE_ADMINISTRATOR > ROLE_USER
				ROLE_USER > ROLE_VISITOR
			</value>
		</property>
	</bean>

	<context:annotation-config />
</beans>